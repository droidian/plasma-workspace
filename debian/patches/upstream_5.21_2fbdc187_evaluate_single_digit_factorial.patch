Origin: backport, https://invent.kde.org/plasma/plasma-workspace/-/commit/2fbdc187d56050a1c0475e3081637f587757d841
From: Alexander Lohnau <alexander.lohnau@gmx.de>
Date: Sat, 12 Dec 2020 22:25:26 +0100
Subject: [PATCH] Evaluate single digit factorial

BUG: 429272
FIXED-IN: 5.21
---
 runners/calculator/calculatorrunner.cpp | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/runners/calculator/calculatorrunner.cpp b/runners/calculator/calculatorrunner.cpp
index 94ce1d2d4..d3b02aa57 100644
--- a/runners/calculator/calculatorrunner.cpp
+++ b/runners/calculator/calculatorrunner.cpp
@@ -52,7 +52,7 @@ CalculatorRunner::CalculatorRunner(QObject *parent, const KPluginMetaData &metaD
                          Plasma::RunnerContext::ShellCommand);
 
     QString description = i18n("Calculates the value of :q: when :q: is made up of numbers and "
-                               "mathematical symbols such as +, -, /, * and ^.");
+                               "mathematical symbols such as +, -, /, *, ! and ^.");
     addSyntax(Plasma::RunnerSyntax(QStringLiteral(":q:"), description));
     addSyntax(Plasma::RunnerSyntax(QStringLiteral("=:q:"), description));
     addSyntax(Plasma::RunnerSyntax(QStringLiteral(":q:="), description));
@@ -217,7 +217,7 @@ void CalculatorRunner::match(Plasma::RunnerContext &context)
     //no meanless space between friendly guys: helps simplify code
     cmd = cmd.trimmed().remove(QLatin1Char(' '));
 
-    if (cmd.length() < 3) {
+    if (cmd.length() < 2) {
         return;
     }
 
@@ -245,7 +245,7 @@ void CalculatorRunner::match(Plasma::RunnerContext &context)
         bool foundDigit = false;
         for (int i = 0; i < cmd.length(); ++i) {
             QChar c = cmd.at(i);
-            if (c.isLetter()) {
+            if (c.isLetter() && c != QLatin1Char('!')) {
                 // not just numbers and symbols, so we return
                 return;
             }
-- 
GitLab


